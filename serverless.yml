service: serverless-app

plugins:
  - serverless-plugin-aws-alerts

custom:
  alerts:
    stages:
      - dev
    topics:
      alarm:
        topic: ${self:provider.environment.SNS_TOPIC}
        notifications:
          - protocol: email
            endpoint: it199@hotmail.com 
    alarms:
      - functionErrors
      - functionThrottles

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev # Default stage to be used. Default is "dev"
  region: us-east-1 # Default region to be used. Default is "us-east-1"
  memorySize: 256
  timeout: 10
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    SNS_TOPIC: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"
    - Effect: Allow
      Action:
        - sns:*
      Resource: "arn:aws:sns:${opt:region, self:provider.region}:*"

functions:
  create:
    handler: todos/create.create
    events:
      - http:
          path: todos
          method: post
          cors: true

  list:
    handler: todos/list.list
    events:
      - http:
          path: todos
          method: get
          cors: true

  get:
    handler: todos/get.get
    events:
      - http:
          path: todos/{id}
          method: get
          cors: true

  update:
    handler: todos/update.update
    events:
      - http:
          path: todos/{id}
          method: put
          cors: true

  delete:
    handler: todos/delete.delete
    events:
      - http:
          path: todos/{id}
          method: delete
          cors: true

  GetAllSnsTopics:
    handler: sns/listAllTopics.handler
    events:
      - httpApi: 'GET /sns/topics'
  PostSnsSubscription:
    handler: sns/subscribeToTopic.handler
    events:
      - httpApi:
          method: POST
          path: /sns/subscription

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      # DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
    # AlarmTopic:
    #   Type: AWS::SNS::Topic
    #   Properties:
    #     DisplayName: 'Serverless Alerts'
    #     TopicName: ${self:provider.environment.SNS_TOPIC}